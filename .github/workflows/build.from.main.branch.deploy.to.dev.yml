name: Build & Deploy to DEV from main branch

env:
  # 🖊️ EDIT your repository secrets to log into your OpenShift cluster and set up the context.
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: ${{ vars.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: ${{ vars.GRAD_BUSINESS_NAMESPACE }}-dev
  COMMON_NAMESPACE: ${{ vars.COMMON_NAMESPACE }}
  GRAD_NAMESPACE: ${{ vars.GRAD_NAMESPACE }}
  BUSINESS_NAMESPACE: ${{ vars.GRAD_BUSINESS_NAMESPACE }}

  # 🖊️ EDIT to change the image registry settings.
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}

  SPRING_BOOT_IMAGE_NAME: educ-grad-distribution-api-dc

  REPO_NAME: "educ-grad-distribution-api"
  APP_DOMAIN: ${{ vars.APP_DOMAIN }}
  BRANCH: "main"
  TAG: "latest"
  MIN_CPU: "20m"
  MAX_CPU: "250m"
  MIN_MEM: "100Mi"
  MAX_MEM: "2048Mi"
  MIN_REPLICAS: "3"
  MAX_REPLICAS: "5"
  STORAGE_LIMIT: "16Gi"

on:
  workflow_dispatch:

jobs:
  openshift-ci-cd:
    name: Build and deploy to OpenShift DEV
    runs-on: ubuntu-20.04
    environment: dev

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Determine image tags
        if: env.TAG == ''
        run: |
          echo "TAG=latest ${GITHUB_SHA::12}" | tee -a $GITHUB_ENV

      # The path the image was pushed to is now stored in ${{ steps.push-image.outputs.registry-path }}
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

        # https://github.com/redhat-actions/oc-login#readme
      - name: Deploy
        run: |
          set -eux
          # Login to OpenShift and select project
          oc login --token=${{ env.OPENSHIFT_TOKEN }} --server=${{ env.OPENSHIFT_SERVER }}
          oc project ${{ env.OPENSHIFT_NAMESPACE }}
          # Cancel any rollouts in progress
          oc rollout cancel dc/${{ env.SPRING_BOOT_IMAGE_NAME }} 2> /dev/null \
          || true && echo "No rollout in progress"
          
          # run build
          # apply build config
          oc process -f https://raw.githubusercontent.com/bcgov/EDUC-GRAD-DISTRIBUTION-API/grad-release/tools/openshift/api.bc.yaml -p REPO_NAME=${{ env.REPO_NAME }} -p BRANCH_NAME=${{ env.BRANCH }} | oc apply -f -
  
          # run build --follow shows log, --wait throws non-zero if fail
          oc start-build ${{ env.REPO_NAME }}-bc --follow --wait
          
          # Process and apply deployment template
          oc process -f tools/openshift/api.dc.yaml -p IS_NAMESPACE=${{ env.OPENSHIFT_NAMESPACE }} -p REPO_NAME=${{ env.REPO_NAME }} \
          -p TAG_NAME=${{ env.TAG }} -p HOST_ROUTE=${{ env.REPO_NAME }}-${{ env.OPENSHIFT_NAMESPACE }}.${{ env.APP_DOMAIN }} \
          -p MIN_REPLICAS=${{ env.MIN_REPLICAS }} -p MAX_REPLICAS=${{ env.MAX_REPLICAS }} -p MIN_CPU=${{ env.MIN_CPU }} \
          -p MAX_CPU=${{ env.MAX_CPU }} -p MIN_MEM=${{ env.MIN_MEM }} -p MAX_MEM=${{ env.MAX_MEM }} \
          -p STORAGE_LIMIT=${{ env.STORAGE_LIMIT }} | oc apply -f -

          # UPDATE Configmaps
          curl -s https://raw.githubusercontent.com/bcgov/${{ env.REPO_NAME }}/${{ env.BRANCH }}/tools/config/update-configmap.sh \
          | bash /dev/stdin \
          dev \
          ${{ env.REPO_NAME }} \
          ${{ env.GRAD_NAMESPACE }} \
          ${{ env.COMMON_NAMESPACE }} \
          ${{ env.BUSINESS_NAMESPACE }} \
          ${{ secrets.SPLUNK_TOKEN }} \
          ${{ vars.APP_LOG_LEVEL }} \
          ${{ vars.BCMAIL_LOCATION }}
          
          # OVERRIDE Configmaps
          curl -s https://raw.githubusercontent.com/bcgov/${{ env.REPO_NAME }}/${{ env.BRANCH }}/tools/config/override-configmap-dev.sh \
          | bash /dev/stdin \
          dev \
          ${{ env.REPO_NAME }} \
          ${{ env.GRAD_NAMESPACE }} \
          ${{ env.COMMON_NAMESPACE }} \
          ${{ env.BUSINESS_NAMESPACE }} \
          ${{ secrets.SPLUNK_TOKEN }} \
          ${{ vars.APP_LOG_LEVEL }} \
          ${{ vars.BCMAIL_LOCATION }}

          # Start rollout (if necessary) and follow it
          oc rollout latest dc/${{ env.SPRING_BOOT_IMAGE_NAME }} 2> /dev/null \
          || true && echo "Rollout in progress"
          oc logs -f dc/${{ env.SPRING_BOOT_IMAGE_NAME }}
          # Get status, returns 0 if rollout is successful
          oc rollout status dc/${{ env.SPRING_BOOT_IMAGE_NAME }}

      # now hit it with a zap scan
      - name: ZAP Scan
        uses: zaproxy/action-api-scan@v0.1.0
        with:
         target: 'https://${{ env.REPO_NAME }}-${{ env.OPENSHIFT_NAMESPACE }}-dev.apps.silver.devops.gov.bc.ca/api/v1/api-docs'
